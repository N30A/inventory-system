services:
  api:
    build:
      context: .
      target: final
    restart: always
    environment:
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SERVER=${DB_SERVER}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
    ports:
      - 80:80
    depends_on:
      - mssql
  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    restart: always
    volumes:
      - mssql-data:/var/opt/mssql
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${DB_PASSWORD}
      - MSSQL_PID=Express
    ports:
      - 1433:1433
  mssql.init:
      image: mcr.microsoft.com/mssql-tools:latest
      volumes:
        - ./resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      depends_on:
        - mssql
      command: "/opt/mssql-tools/bin/sqlcmd -C -S mssql -U sa -P '${DB_PASSWORD}' -d master -i /docker-entrypoint-initdb.d/schema.sql"
volumes:
  mssql-data:
